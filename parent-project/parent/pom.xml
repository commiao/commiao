<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.commiao.parent</groupId>
		<artifactId>parent-project</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>
  
  	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<maven.build.Copyright>com.commiao</maven.build.Copyright>
		<skipTest>true</skipTest>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.commiao.parent</groupId>
				<artifactId>libs-3rd</artifactId>
				<version>1.0.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<verbose>true</verbose>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<!-- 单元测试插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<skip>${skipTest}</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<resourceEncoding>UTF-8</resourceEncoding>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Copyright>${maven.build.Copyright}</Copyright>
							<Project-name>${project.name}</Project-name>
							<Project-version>${project.version}</Project-version>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- jar插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Copyright>${maven.build.Copyright}</Copyright>
							<Project-name>${project.name}</Project-name>
							<Project-version>${project.version}</Project-version>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- clean插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
			</plugin>
			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<!-- deploy插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<!-- 依赖jar包插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>



			<!-- 1、运行findbugs任务前请先运行“mvn package”编译工程 2、 命令 mvn findbugs:help 查看findbugs插件的帮助 
				mvn findbugs:check 检查代码是否通过findbugs检查，如果没有通过检查，检查会失败，但检查不会生成结果报表 mvn findbugs:findbugs 
				检查代码是否通过findbugs检查，如果没有通过检查，检查不会失败，会生成结果报表保存在target/findbugsXml.xml文件中 mvn 
				findbugs:gui 检查代码并启动gui界面来查看结果 3、 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>


			<!-- 默认提供四个规则 * config/sun_checks.xml - Sun Microsystems Definition (default). 
				* config/maven_checks.xml - Maven Development Definitions. * config/turbine_checks.xml 
				- Turbine Development Definitions. * config/avalon_checks.xml - Avalon Development 
				Definitions. mvn checkstyle:help 查看checkstyle-plugin的帮助： mvn checkstyle:check 
				检查工程是否满足checkstyle的检查，如果没有满足，检查会失败，可以通过target/site/checkstyle.html查看。 mvn 
				checkstyle:checkstyle 检查工程是否满足checkstyle的检查，如果没有满足，检查不会失败，可以通过target/site/checkstyle.html查看。 
				mvn checkstyle:checkstyle-aggregate 检查工程是否满足checkstyle的检查，如果没有满足，检查不会失败，可以通过target/site/checkstyle.html查看。 
				在运行完mvn checkstyle:checkstyle命令后，可以运行"mvn jxr:jxr"来使checkstyle的结果可以直接跳转到代码行位置 -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin</artifactId>
				<version>1.0.0-beta-1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<!--http://maven.apache.org/plugins/maven-source-plugin/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
						<!-- 表示从打包阶段开始打包源文件 -->
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>sonar</id>
						<phase>deploy</phase>
						<goals>
							<goal>sonar</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>
  
</project>