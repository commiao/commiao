<?xml version="1.0" encoding="UTF-8"?>
<!-- Log4j 2.x 配置文件。 1、monitorInterval 监控时间间隔为秒 log4j 2.0在重新配置的时候不会丢失之前的日志记录。 2、status表示log4j2本身的日志打印级别TRACE < DEBUG < INFO < WARN < ERROR < FATAL 3、如果是web项目需要在web.xml中配置 <context-param> <param-name>log4jConfiguration</param-name> 
	<param-value>/WEB-INF/conf/log4j2.xml</param-value> </context-param> <listener> <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class> </listener> 4、http://logging.apache.org/log4j/2.x/manual/garbagefree.html -->
<Configuration status="OFF" monitorInterval="60">

	<properties>
		<property name="LOG_HOME">/Volumes/O/logs/ac</property>
		<property name="FILE_NAME">ac_local</property>
		<property name="LOGSTASH_HOST">udp:192.168.6.55</property>
		<property name="LOGSTASH_PORT">12202</property>
<!-- 		<property name="DEBUG_FILE_PATTERN">${LOG_HOME}/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/${FILE_NAME}_debug-%d{yyyy-MM-dd-HH}.log.gz</property>
		<property name="ERROR_FILE_PATTERN">${LOG_HOME}/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/${FILE_NAME}_error-%d{yyyy-MM-dd}.log.gz</property>
		<property name="INFO_FILE_PATTERN">${LOG_HOME}/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/${FILE_NAME}_info-%d{yyyy-MM-dd-HH}.log.gz</property>
		<property name="WARN_FILE_PATTERN">${LOG_HOME}/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/${FILE_NAME}_warn-%d{yyyy-MM-dd}.log.gz</property> -->
		<property name="DEBUG_FILE_PATTERN">${LOG_HOME}/%d{yyyy-MM}/%d{yyyy-MM-dd}/${FILE_NAME}_debug-%d{yyyy-MM-dd-HH}.log.gz</property>
		<property name="ERROR_FILE_PATTERN">${LOG_HOME}/%d{yyyy-MM}/%d{yyyy-MM-dd}/${FILE_NAME}_error-%d{yyyy-MM-dd}.log.gz</property>
		<property name="INFO_FILE_PATTERN">${LOG_HOME}/%d{yyyy-MM}/%d{yyyy-MM-dd}/${FILE_NAME}_info-%d{yyyy-MM-dd-HH}.log.gz</property>
		<property name="WARN_FILE_PATTERN">${LOG_HOME}/%d{yyyy-MM}/%d{yyyy-MM-dd}/${FILE_NAME}_warn-%d{yyyy-MM-dd}.log.gz</property>
		<property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} %X{threadId}  %X{loggerType} [%t] %-5level %l - %msg%n%throwable</property>
		<property name="DEBUG_FILE_NAME">${LOG_HOME}/${FILE_NAME}_debug.log</property>
		<property name="ERROR_FILE_NAME">${LOG_HOME}/${FILE_NAME}_error.log</property>
		<property name="WARN_FILE_NAME">${LOG_HOME}/${FILE_NAME}_warn.log</property>
		<property name="INFO_FILE_NAME">${LOG_HOME}/${FILE_NAME}_info.log</property>
	</properties>


	<!-- %d{HH:mm:ss.SSS} 表示输出到毫秒的时间 %t 输出当前线程名称 %-5level 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0 %logger 输出logger名称 %msg 日志文本 %n 换行 %L 输出行号 %M 输出所在方法名 %l 输出语句所在的行数, 包括类名、方法名、文件名、行数 -->
	<Appenders>
		<!-- 输出到控制台 -->
		<Console name="Console" target="SYSTEM_OUT" follow="true">
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Filters>
				<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
				<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
		</Console>


		<RollingRandomAccessFile name="debug-file" fileName="${DEBUG_FILE_NAME}" filePattern="${DEBUG_FILE_PATTERN}">
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数： interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位， 比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟 modulate，boolean型，说明是否对封存时间进行调制。若modulate=true， 则封存时间将以0点为边界进行偏移计算。比如，modulate=true，interval=4hours， 
					那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00， 之后的封存时间依次为08:00，12:00，16:00 -->
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
			<DefaultRolloverStrategy max="500">
				<Delete basePath="${LOG_HOME}" maxDepth="5">
					<IfFileName glob="*/*/${FILE_NAME}_debug-*.log.gz" />
					<IfLastModified age="30d" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingRandomAccessFile>



		<!-- fileName 指定当前日志文件的位置和文件名称 filePattern 指定当发生Rolling时， 文件的转移和重命名规则 SizeBasedTriggeringPolicy 指定当文件体积大于size指定的值时， 触发Rolling DefaultRolloverStrategy 指定最多保存的文件个数 TimeBasedTriggeringPolicy 这个配置需要和filePattern结合使用，// 
			注意filePattern中配置的文件重命名规则是${FILE_NAME}-%d{yyyy-MM-dd HH-mm}-%i， 最小的时间粒度是mm，即分钟， TimeBasedTriggeringPolicy指定的size是1，结合起来就是每1分钟生成一个新文件。 如果改成%d{yyyy-MM-dd HH}，最小粒度为小时，则每一个小时生成一个文件。 -->
		<RollingRandomAccessFile name="info-file" fileName="${INFO_FILE_NAME}" filePattern="${INFO_FILE_PATTERN}">
			<!-- 级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志 onMatch 用于配置符合过滤条件的操作 onMismatch 用于配置不符合过滤条件的操作 过滤器，执行一个过滤器会有返回个枚举值，即DENY，NEUTRAL，ACCEPT其中之一。 返回DENY，日志将立即被抛弃不再经过其他过滤器； 返回NEUTRAL，有序列表里的下个过滤器过接着处理日志； 
				返回ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
			<Filters>
				<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
		<DefaultRolloverStrategy max="500">
				<Delete basePath="${LOG_HOME}" maxDepth="5">
					<IfFileName glob="*/*/${FILE_NAME}_info-*.log.gz" />
					<IfLastModified age="30d" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingRandomAccessFile>

		<RollingRandomAccessFile name="error-file" fileName="${ERROR_FILE_NAME}" filePattern="${ERROR_FILE_PATTERN}">
			<Filters>
				<!-- 如果是warn则丢弃，不是warn则继续 如果是error则处理，不是则丢弃 -->
				<!-- <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL" /> -->
				<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
			<DefaultRolloverStrategy max="500">
				<Delete basePath="${LOG_HOME}" maxDepth="5">
					<IfFileName glob="*/*/${FILE_NAME}_error-*.log.gz" />
					<IfLastModified age="30d" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingRandomAccessFile>


		<RollingRandomAccessFile name="warn-file" fileName="${WARN_FILE_NAME}" filePattern="${WARN_FILE_PATTERN}">
			<Filters>
				<!--如果是 error则丢弃 ，不是error就继续 如果是warn则接受，不是则丢弃 -->
				<ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL" />
				<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />

			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
			<DefaultRolloverStrategy max="500">
				<Delete basePath="${LOG_HOME}" maxDepth="5">
					<IfFileName glob="*/*/${FILE_NAME}_warn-*.log.gz" />
					<IfLastModified age="30d" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingRandomAccessFile>

		<!-- %d{yyyy-MM-dd HH:mm:ss.SSS} %X{threadId}  %X{type} [%t] %-5level %l - %msg%n%throwable

https://github.com/mp911de/logstash-gelf 
http://logging.paluch.biz/examples/log4j-2.x.html-->
		<Gelf name="gelf" host="${LOGSTASH_HOST}" port="${LOGSTASH_PORT}" version="1.1" 
		extractStackTrace="true" filterStackTrace="true" mdcProfiling="true" 
		includeFullMdc="true" maximumMessageSize="8192" 
		ignoreExceptions = "true" >
		
			<Field name="timestamp" pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}" />
			<Field name="facility" pattern="${FILE_NAME}" />
			<Field name="threadId" pattern="%X{threadId}" />
			<Field name="type" pattern="%X{loggerType}" />
			<Field name="threadName" pattern="%t" />
			<Field name="level" pattern="%-5level" />
			<Field name="className" pattern="%l" />
			<Field name="message" pattern="%msg%n" />
			<Field name="throwable" pattern="%throwable" />
			
		</Gelf>

	</Appenders>



	<Loggers>
	
		<!-- 全局配置 自己项目的包名会输出debug，其他的按照info输出-->
		<Root level="info">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</Root>
		<!-- 自己项目的包名 -->
		<logger name="com.basic" level="debug"  additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</logger>
		<logger name="com.chtwm" level="debug" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</logger>
		<logger name="com.hengtianjf" level="debug" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</logger>
		<logger name="basic.arch.component" level="debug" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</logger>
		<logger name="cn.xps.sso" level="debug" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="debug-file" />
			<AppenderRef ref="info-file" />
			<AppenderRef ref="warn-file" />
			<AppenderRef ref="error-file" />
			<AppenderRef ref="gelf" />
		</logger>

		
		<!-- 三方包日志 -->
		<logger name="org.aspectj" level="info" />
		<logger name="org.bouncycastle" level="info" />
		<logger name="org.codehaus" level="info" />
		<logger name="org.springframework" level="info" />
		<logger name="org.springframework.web" level="info" />
		<logger name="org.hibernate" level="info" />
		<logger name="org.mybatis.spring" level="info" />
		<logger name="org.apache" level="info" />
		<logger name="org.aopalliance" level="info" />
		<logger name="org.junit" level="info" />
		<logger name="org.hamcrest" level="info" />
		<logger name="org.jaxen" level="info" />
		<logger name="org.jboss" level="info" />
		<logger name="org.jdom" level="info" />

		<logger name="com.alibaba" level="info" />
		<logger name="com.ibm" level="info" />
		<logger name="com.github" level="info" />
		<logger name="com.aspectj" level="info" />
		<logger name="com.aopalliance" level="info" />
		<logger name="com.mongondb" level="info" />
		<logger name="com.mchanage" level="info" />
		<logger name="com.google" level="info" />
		<logger name="com.mysql" level="info" />
		<logger name="com.fasterxml" level="info" />
		<logger name="com.mchange.v2.c3p0" level="info" />
		<logger name="com.jhlabs" level="info" />
	

		<logger name="net.sf" level="error" />
		<logger name="net.sourceforge" level="info" />
		<logger name="nu.xom" level="error" />
		<logger name="aj.org" level="error" />

		<logger name="redis.clients" level="info" />
		<logger name="javax.servlet" level="info" />
		<logger name="javax.xml" level="info" />
		<logger name="javax.validation" level="info" />
        <logger name="org.slf4j" level="info" />
        <logger name="org.w3c" level="info" />

		
	</Loggers>
</Configuration>